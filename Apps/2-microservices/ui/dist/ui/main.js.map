{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/api.service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.less","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Product } from './product';\nimport { Order } from './order';\nimport { environment } from '../environments/environment';\n\n@Injectable()\nexport class ApiService {\n  public endpoint: string = \"http://rvstoreapi.vergeops.com/\"; \n  \n  constructor(private http: HttpClient) { \n    if(window.location.hostname == 'localhost') {\n      this.endpoint = \"http://localhost:9000/\";\n    } else if (window.location.hostname == '192.168.99.100') {\n      this.endpoint = \"http://192.168.99.100:30090/\";\n    } \n\n  }\n\n  //endpoint = environment.apiEndpoint;\n\n  getProducts(): Observable<Product> {\n    return this.http.get<Product>(this.endpoint + \"products/\");\n  }\n\n  getOrders(): Observable<Order> {\n    return this.http.get<Order>(this.endpoint + \"orders/\");\n  }\n\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h1>\\n    Welcome to RV Store!\\n  </h1>\\n</div>\\n\\n<h1>Products</h1>\\n<div class=\\\"row\\\">\\n  <div *ngFor=\\\"let product of products\\\">\\n    <div class=\\\"col-sm-2\\\">\\n      <div class=\\\"card\\\" style=\\\"width: 18rem;\\\">\\n        <img class=\\\"card-img-top\\\" src=\\\"{{product.image}}\\\" alt=\\\"Card image cap\\\">\\n        <div class=\\\"card-body\\\">\\n          <h5 class=\\\"card-title\\\">{{product.name}}</h5>\\n          <p class=\\\"card-text\\\">{{product.description}}</p>\\n          <h4>{{product.price | currency}}</h4>\\n          <a href=\\\"#\\\" class=\\\"btn btn-primary\\\">Buy It</a>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<h1>Orders</h1>\\n<p><a href=\\\"#\\\" (click)=\\\"updateInterval(10)\\\">10</a> | <a href=\\\"#\\\" (click)=\\\"updateInterval(30)\\\">30</a> | <a href=\\\"#\\\" (click)=\\\"updateInterval(60)\\\">60</a> | <a href=\\\"#\\\" (click)=\\\"updateInterval(120)\\\">120</a> seconds <i *ngIf=\\\"orders.length == 0\\\" class=\\\"fas fa-sync fa-spin\\\"></i> {{loading}}</p>\\n<table class=\\\"table table-striped\\\">\\n    <thead>\\n      <tr>\\n        <th scope=\\\"col\\\">ID</th>\\n        <th scope=\\\"col\\\">Date</th>\\n        <th scope=\\\"col\\\">Customer</th>\\n        <th scope=\\\"col\\\">Items</th>\\n        <th scope=\\\"col\\\">Subtotal</th>\\n        <th scope=\\\"col\\\">Tax</th>\\n        <th scope=\\\"col\\\">Total</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let order of orders\\\">\\n        <th scope=\\\"row\\\">{{order.id}}</th>\\n        <td>{{order.orderDate | date: 'medium'}}</td>\\n        <td>{{order.customerName}}</td>\\n        <td><p *ngFor=\\\"let item of order.items\\\">\\n          {{item.name}} - {{item.price | currency}}  \\n        </p></td>\\n        <td>{{order.subTotal | currency}}</td>\\n        <td>{{order.tax | currency}}</td>\\n        <td><strong>{{order.total | currency}}</strong></td>\\n      </tr>\\n    </tbody>\\n  </table>\\n\\n  Backend host name: <input type=\\\"text\\\" size=\\\"100\\\" [(ngModel)]=\\\"backendUrl\\\"> <button class=\\\"btn btn-primary\\\" (click)=\\\"updateBackend()\\\">Update</button> {{message}}\\n\\n<router-outlet></router-outlet>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQubGVzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from './api.service';\nimport { Product } from './product';\n\nimport { Observable } from 'rxjs';\nimport { interval } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less']\n})\nexport class AppComponent implements OnInit {\n  public products;\n  public orders;\n  timeLeft: number;\n  interval: number = 60;\n  public backendUrl = this.apiService.endpoint;\n  public message;\n\n  constructor(private apiService: ApiService) { }\n\n  ngOnInit() {\n    const timer = interval(1000);\n    timer.subscribe(n => {\n      this.timeLeft = this.interval - (n % this.interval);\n      if (n % this.interval === 0)\n        this.getOrders()\n    });\n\n    this.getProducts();\n  }\n\n  getProducts() {\n    this.apiService.getProducts().subscribe(\n      products => {\n        this.products = products;\n      }\n    );\n  }\n\n  getOrders() {\n    this.orders = [];\n    this.apiService.getOrders().subscribe(\n      orders => {\n        this.orders = orders;\n      }\n    );\n  }\n\n  updateBackend() {\n    this.apiService.endpoint = this.backendUrl;\n    this.message = \"OK!\";\n    this.getProducts();\n    this.getOrders();\n  }\n\n  updateInterval(interval) {\n    event.preventDefault()\n    this.interval = interval;\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { ApiService } from './api.service';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [ApiService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiEndpoint: 'http://localhost:9000/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}